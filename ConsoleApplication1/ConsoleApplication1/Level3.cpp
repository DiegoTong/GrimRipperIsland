#include "Level3.h"
void Level3::init(Player* mPlayer)
{
	player = mPlayer;
	levelFinished = false;
	bREntrance.init(0);
	lREntranceToLobby.init(1);
	sRLobby.init(0);
	lRLobbyToNorthernRoom.init(1);
	sRNorthernRoom.init(2);
	lREntranceToWestRoom1.init(1);
	lREntranceToWestRoom2.init(1);
	lREntranceToWestRoom3.init(1);
	lREntranceToWestRoom4.init(1);
	sRWestRoom.init(2);
	lREntranceToBallRoom.init(1);
	bRBallRoom.init(0);
	sRBathRoom.init(0);
	sRWestWing.init(0);
	lRWestWingToSouthWestChamber.init(1);
	mRSouthWestChamber.init(2);
	lRSouthWestChamberToBoss.init(1);
	mRBossRoom.init(3);
	lRSouthEastChamberToBoss.init(1);
	mRSouthEastChamber.init(2);
	lRSouthEastChamberToSouthGateHouse.init(1);
	mRSouthGateHouse.init(0);
	lRSouthGateHouseToNorthGateHouse.init(1);
	sRNorthGateHouse.init(0);
	lRNorthGateHouseToEntrance.init(1);
	lRNorthGateHouseToWestChamber.init(1);
	mRWestChamber.init(2);

	bREntrance.roomName = "bREntrance";
	lREntranceToLobby.roomName = "lREntranceToLobby";
	sRLobby.roomName = "sRLobby";
	lRLobbyToNorthernRoom.roomName = "lRLobbyToNorthernRoom";
	sRNorthernRoom.roomName = "sRNorthernRoom";
	lREntranceToWestRoom1.roomName = "lREntranceToWestRoom1";
	lREntranceToWestRoom2.roomName = "lREntranceToWestRoom2";
	lREntranceToWestRoom3.roomName = "lREntranceToWestRoom3";
	lREntranceToWestRoom4.roomName = "lREntranceToWestRoom4";
	sRWestRoom.roomName = "sRWestRoom";
	lREntranceToBallRoom.roomName = "lREntranceToBallRoom";
	bRBallRoom.roomName = "bRBallRoom";
	sRBathRoom.roomName = "sRBathRoom";
	sRWestWing.roomName = "sRWestWing";
	lRWestWingToSouthWestChamber.roomName = "lRWestWingToSouthWestChamber";
	mRSouthWestChamber.roomName = "mRSouthWestChamber";
	lRSouthWestChamberToBoss.roomName = "lRSouthWestChamberToBoss";
	mRBossRoom.roomName = "mRBossRoom";
	lRSouthEastChamberToBoss.roomName = "lRSouthEastChamberToBoss";
	mRSouthEastChamber.roomName = "mRSouthEastChamber";
	lRSouthEastChamberToSouthGateHouse.roomName = "lRSouthEastChamberToSouthGateHouse";
	mRSouthGateHouse.roomName = "mRSouthGateHouse";
	lRSouthGateHouseToNorthGateHouse.roomName = "lRSouthGateHouseToNorthGateHouse";
	sRNorthGateHouse.roomName = "sRNorthGateHouse";
	lRNorthGateHouseToEntrance.roomName = "lRNorthGateHouseToEntrance";
	lRNorthGateHouseToWestChamber.roomName = "lRNorthGateHouseToWestChamber";
	mRWestChamber.roomName = "mRWestChamber";

	levelRooms.push_back(&bREntrance);
	levelRooms.back()->createPortal(1, "lREntranceToLobby", 8, 0);
	levelRooms.back()->createPortal(4, "lREntranceToBallRoom", 0, 3);
	levelRooms.back()->createPortal(3, "lRNorthGateHouseToEntrance", levelRooms.back()->sizeX, 3);
	levelRooms.push_back(&lREntranceToLobby);
	levelRooms.back()->createPortal(1, "sRLobby", 2, 0);
	levelRooms.back()->createPortal(2, "bREntrance", 2, levelRooms.back()->sizeY);
	levelRooms.push_back(&sRLobby);
	levelRooms.back()->createPortal(2, "lREntranceToLobby", 3, levelRooms.back()->sizeY);
	levelRooms.back()->createPortal(4, "lREntranceToWestRoom1", 0, 2);
	levelRooms.back()->createPortal(1, "lRLobbyToNorthernRoom", 3, 0);
	levelRooms.push_back(&lRLobbyToNorthernRoom);
	levelRooms.back()->createPortal(1, "sRNorthernRoom", 2, 0);
	levelRooms.back()->createPortal(2, "sRLobby", 2, levelRooms.back()->sizeY);
	levelRooms.push_back(&sRNorthernRoom);
	levelRooms.back()->createPortal(2, "lRLobbyToNorthernRoom", 3, levelRooms.back()->sizeY);
	levelRooms.push_back(&lREntranceToWestRoom1);
	levelRooms.back()->createPortal(4, "lREntranceToWestRoom2", 0, 2);
	levelRooms.back()->createPortal(3, "sRLobby", levelRooms.back()->sizeX, 2);
	levelRooms.push_back(&lREntranceToWestRoom2);
	levelRooms.back()->createPortal(1, "lREntranceToWestRoom3", 2, 0);
	levelRooms.back()->createPortal(3, "lREntranceToWestRoom1", levelRooms.back()->sizeX, levelRooms.back()->sizeY-2);
	levelRooms.push_back(&lREntranceToWestRoom3);
	levelRooms.back()->createPortal(4, "lREntranceToWestRoom4", 0, 2);
	levelRooms.back()->createPortal(2, "lREntranceToWestRoom2", levelRooms.back()->sizeX-2, levelRooms.back()->sizeY);
	levelRooms.push_back(&lREntranceToWestRoom4);
	levelRooms.back()->createPortal(2, "sRWestRoom", 2, levelRooms.back()->sizeY);
	levelRooms.back()->createPortal(3, "lREntranceToWestRoom3", levelRooms.back()->sizeX, 2);
	levelRooms.push_back(&sRWestRoom);
	levelRooms.back()->createPortal(1, "lREntranceToWestRoom4", 3, 0);
	levelRooms.push_back(&lREntranceToBallRoom);
	levelRooms.back()->createPortal(4, "bRBallRoom", 0, 2);
	levelRooms.back()->createPortal(3, "bREntrance", levelRooms.back()->sizeX, 2);
	levelRooms.push_back(&bRBallRoom);
	levelRooms.back()->createPortal(1, "sRBathRoom", 8, 0);
	levelRooms.back()->createPortal(4, "sRWestWing", 0, 3);
	levelRooms.back()->createPortal(3, "lREntranceToBallRoom", levelRooms.back()->sizeX, 3);
	levelRooms.push_back(&sRBathRoom);
	levelRooms.back()->createPortal(2, "bRBallRoom", 3, levelRooms.back()->sizeY);
	levelRooms.push_back(&sRWestWing);
	levelRooms.back()->createPortal(3, "bRBallRoom", levelRooms.back()->sizeX, 2);
	levelRooms.back()->createPortal(4, "lRWestWingToSouthWestChamber", 0, 2);
	levelRooms.push_back(&lRWestWingToSouthWestChamber);
	levelRooms.back()->createPortal(2, "mRSouthWestChamber", 2, levelRooms.back()->sizeY);
	levelRooms.back()->createPortal(3, "sRWestWing", levelRooms.back()->sizeX, 2);
	levelRooms.push_back(&mRSouthWestChamber);
	levelRooms.back()->createPortal(1, "lRWestWingToSouthWestChamber", 2, 0);
	levelRooms.back()->createPortal(3, "lRSouthWestChamberToBoss", levelRooms.back()->sizeX, 3);
	levelRooms.push_back(&lRSouthWestChamberToBoss);
	levelRooms.back()->createPortal(4, "mRSouthWestChamber", 0, 2);
	levelRooms.back()->createPortal(3, "mRBossRoom", levelRooms.back()->sizeX, 2);
	levelRooms.push_back(&mRBossRoom);
	levelRooms.back()->createPortal(3, "lRSouthEastChamberToBoss", levelRooms.back()->sizeX, 2);
	levelRooms.back()->createPortal(4, "lRSouthWestChamberToBoss", 0, 2);
	levelRooms.push_back(&lRSouthEastChamberToBoss);
	levelRooms.back()->createPortal(4, "mRBossRoom", 0, 2);
	levelRooms.back()->createPortal(3, "mRSouthEastChamber", levelRooms.back()->sizeX, 2);
	levelRooms.push_back(&mRSouthEastChamber);
	levelRooms.back()->createPortal(1, "lRSouthEastChamberToSouthGateHouse", 5, 0);
	levelRooms.back()->createPortal(4, "lRSouthEastChamberToBoss", 0, 3);
	levelRooms.push_back(&lRSouthEastChamberToSouthGateHouse);
	levelRooms.back()->createPortal(1, "mRSouthGateHouse", 2, 0);
	levelRooms.back()->createPortal(2, "mRSouthEastChamber", 2, levelRooms.back()->sizeY);
	levelRooms.push_back(&mRSouthGateHouse);
	levelRooms.back()->createPortal(1, "lRSouthGateHouseToNorthGateHouse", 5, 0);
	levelRooms.back()->createPortal(2, "lRSouthEastChamberToSouthGateHouse", 5, levelRooms.back()->sizeY);
	levelRooms.push_back(&lRSouthGateHouseToNorthGateHouse);
	levelRooms.back()->createPortal(1, "sRNorthGateHouse", 2, 0);
	levelRooms.back()->createPortal(2, "mRSouthGateHouse", 2, levelRooms.back()->sizeY);
	levelRooms.push_back(&sRNorthGateHouse);
	levelRooms.back()->createPortal(1, "lRNorthGateHouseToWestChamber", 5, 0);
	levelRooms.back()->createPortal(2, "lRSouthGateHouseToNorthGateHouse", 5, levelRooms.back()->sizeY);
	levelRooms.back()->createPortal(4, "lRNorthGateHouseToEntrance", 0, 2);
	levelRooms.push_back(&lRNorthGateHouseToEntrance);
	levelRooms.back()->createPortal(4, "bREntrance", 0, 2);
	levelRooms.back()->createPortal(3, "sRNorthGateHouse", levelRooms.back()->sizeX, 2);
	levelRooms.push_back(&lRNorthGateHouseToWestChamber);
	levelRooms.back()->createPortal(1, "mRWestChamber", 2, 0);
	levelRooms.back()->createPortal(2, "sRNorthGateHouse", 2, levelRooms.back()->sizeY);
	levelRooms.push_back(&mRWestChamber);
	levelRooms.back()->createPortal(2, "lRNorthGateHouseToWestChamber", 5, levelRooms.back()->sizeY);
	currentRoom = levelRooms.front();
	setItemsInRooms(3);
}